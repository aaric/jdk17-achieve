plugins {
    id "java"
    id "io.freefair.lombok" version "8.6"
    id "io.spring.dependency-management" version "1.1.4"
    id "team.yi.semantic-gitlog" version "0.6.12"
}

group = "com.sample"
version = "0.4.0-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://repository.incarcloud.com/content/groups/public" }
}

dependencies {
    implementation "org.slf4j:slf4j-api"
    implementation "org.slf4j:slf4j-simple"

    implementation "commons-beanutils:commons-beanutils"
    implementation "commons-codec:commons-codec"

    implementation "commons-net:commons-net"
    implementation "dev.samstevens.totp:totp"

    implementation "cn.hutool:hutool-core"
    implementation "org.mapstruct:mapstruct"
    annotationProcessor "org.mapstruct:mapstruct-processor"

    testImplementation("org.junit.jupiter:junit-jupiter")
    //testImplementation("org.hamcrest:hamcrest")
    testImplementation("org.assertj:assertj-core")
    testAnnotationProcessor "org.mapstruct:mapstruct-processor"
}

dependencyManagement {
    dependencies {
        dependencySet(group: "org.slf4j", version: "1.7.36") {
            entry "slf4j-api"
            entry "slf4j-simple"
        }

        dependency "org.junit.jupiter:junit-jupiter:5.8.2"
        //dependency "org.hamcrest:hamcrest:2.2"
        dependency "org.assertj:assertj-core:3.25.3"

        dependency "commons-beanutils:commons-beanutils:1.9.4"
        dependency "commons-codec:commons-codec:1.16.0"

        dependency "commons-net:commons-net:3.9.0"
        dependency "dev.samstevens.totp:totp:1.7.1"

        dependency "cn.hutool:hutool-core:5.8.26"
        dependency "org.mapstruct:mapstruct:1.5.5.Final"
        dependency "org.mapstruct:mapstruct-processor:1.5.5.Final"
    }
}

// gradle myTask
def myTask = tasks.register("myTask") {
    doLast {
        print("myTask done")
    }
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked"

    dependsOn myTask
}

compileTestJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked"
}

test {
    useJUnitPlatform()
}

changelog {
    toRef = "master"
    isUnstable = true

    jsonFile = file("${project.rootDir}/CHANGELOG.json")
    fileSets = [
            {
                template = file("${project.rootDir}/config/gitlog/CHANGELOG.mustache")
                target = file("${project.rootDir}/CHANGELOG.md")
            },
            {
                template = file("${project.rootDir}/config/gitlog/CHANGELOG.zh-cn.mustache")
                target = file("${project.rootDir}/CHANGELOG.zh-cn.md")
            }
    ]
    commitLocales = [
            "zh-cn": file("${project.rootDir}/config/gitlog/commit-locales.zh-cn.md")
    ]
}

derive {
    toRef = "master"
    isUnstable = true
    derivedVersionMark = "NEXT_VERSION:=="

    commitLocales = [
            "zh-cn": file("${project.rootDir}/config/gitlog/commit-locales.zh-cn.md")
    ]
}

task removeLombokConfig() {
    def subProjectPath = project.projectDir
    if (null != subProjectPath) {
        def lombokConfigFile = new File(subProjectPath, "lombok.config")
        if (lombokConfigFile.exists()) {
            lombokConfigFile.delete()
        }
    }
}

task removeOutputLog() {
    def subProjectPath = project.projectDir
    if (null != subProjectPath) {
        def logPath = new File(subProjectPath, "output.log")
        if (logPath.exists()) {
            logPath.delete()
        }
    }
}

defaultTasks "assemble"